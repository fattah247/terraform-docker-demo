name: Deploy Docker Compose to EC2

on:
  push:
    branches: ["main"]
    paths:
      - "app/**"
      - "docker-compose.yml"
      - ".github/workflows/deploy.yml"

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Debug repo contents
        run: |
          echo "PWD: $(pwd)"
          ls -la
          echo "---- APP DIRECTORY ----"
          ls -la app/ || echo "No app directory found"

      - name: Copy files to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          source: |
            app/
            docker-compose.yml
          target: /home/ubuntu/phase2
          overwrite: true

      - name: Deploy on EC2
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            set -euxo pipefail
            
            # Install Docker if missing
            if ! command -v docker >/dev/null 2>&1; then
              curl -fsSL https://get.docker.com | sh
              sudo usermod -aG docker ubuntu
            fi
            
            # Install Docker Compose if missing
            if ! docker compose version >/dev/null 2>&1; then
              sudo apt-get update
              sudo apt-get install -y docker-compose-plugin
            fi
            
            # Verify installations
            docker --version
            docker compose version
            
            # Ensure proper permissions
            sudo chown -R ubuntu:ubuntu /home/ubuntu/phase2 || true
            
            cd /home/ubuntu/phase2
            
            # Verify files are present
            echo "Contents of phase2 directory:"
            ls -la
            echo "Contents of app directory:"
            ls -la app/ || echo "No app directory found"
            
            # Stop, build and start containers
            docker compose down || true
            docker compose build
            docker compose up -d
            
            # Show container status
            docker ps --format "table {{.Names}}\t{{.Image}}\t{{.Status}}\t{{.Ports}}"
            
            # Wait for application to start with improved health check
            echo "Waiting for application to start..."
            for i in {1..15}; do
              # Check if container is running and healthy
              if docker ps --filter "name=tf-docker-demo" --format "{{.Status}}" | grep -q "Up"; then
                # Try to access the application
                if curl -fsS -m 5 http://localhost:80/ >/dev/null 2>&1; then
                  echo "Application is responding"
                  break
                fi
              fi
              echo "Waiting for application... ($i)"
              sleep 5
            done
            
            # Final check with detailed output
            echo "Final application check:"
            curl -v http://localhost:80/ || echo "Curl failed"
            
            # Show container logs for debugging
            echo "Container logs:"
            docker compose logs --tail=20
