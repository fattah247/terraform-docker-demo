name: Deploy Docker Compose to EC2

on:
  push:
    branches: [ "main" ]
    paths:
      - "app/**"
      - "docker-compose.yml"
      - ".github/workflows/deploy.yml"

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Debug repo contents (sanity check)
        run: |
          echo "PWD: $(pwd)"
          echo "---- TREE ----"
          ls -la
          echo "---- RECURSIVE ----"
          ls -R .

      - name: Copy files to EC2 (app + compose)
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}        # e.g. 54.x.x.x (your Elastic IP)
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}      # your PEM private key content
          # Explicit globs so it's never empty:
          source: |
            ./app/**
            ./docker-compose.yml
          target: /home/ubuntu/phase2
          overwrite: true
          strip_components: 0

      - name: Build & run Docker Compose on EC2
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            set -euxo pipefail

            # Ensure Docker/Compose present
            if ! command -v docker >/dev/null 2>&1; then
              curl -fsSL https://get.docker.com | sh
              sudo usermod -aG docker ubuntu || true
              # compose plugin typically installed with Docker on Ubuntu 24.04
            fi

            # Ensure working dir ownership
            sudo mkdir -p /home/ubuntu/phase2
            sudo chown -R ubuntu:ubuntu /home/ubuntu/phase2
            cd /home/ubuntu/phase2

            # Bring up new version
            docker compose down || true
            docker compose build
            docker compose up -d

            # Quick health check from the instance
            sleep 2
            curl -s -I http://localhost | head -n 1 || true

      - name: Show running containers
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            docker ps --format "table {{.Names}}\t{{.Image}}\t{{.Status}}\t{{.Ports}}"
